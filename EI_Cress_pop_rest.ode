# model for PID with adaptation
# Approximation for A(V), VT, Vr and sigV should be fixed

# with noise


# INPUT
par I=0


# SYNAPSES
par gie=2, gii=0, gee=1, gei=2

par tauE_1=5.4, tauE_2=5.4, V_AMPA=0
par tauI_1=8.3, tauI_2=0.2, V_GABA=-70


# EXCITATORY POPULATION
#par sigVe=4, VTe=-55, Vre=-65
#par gAHP=2, VAHP=-70, tauAHP_1=1, tauAHP_2=414

par gamma1=0.044494542
par tau=100
par beta=7

par egkl=0.044
par egnal=0.02
par egcil=0.0085

par erho=1.25
par eGglia=0
par Eepsilon=1.33
par Koinf=8

par ecli=6
par eclO=130
par Ce=1.0

par erK=135
par erNa=26


# INHIBITORY POPULATION
#par sigVi=4, VTi=-55, Vri=-65

par igkl=0.048
par ignal=0.0215
par igcil=0.03

par irho=1.25
par iGglia=0
par iepsilon=1.33

par icli=6
par iclO=130
par Ci=1.0


# IONIC CONCENTRATIONS
par eKo=8
par eNai=20

par iKo=8
par iNai=20

par irK=120
par irNa=26

#eNai
# deNai/dt= 1/tau*(erNa*nuE(Ve) -gamma1*egnal*(Ve-eVNa(eNai)) -3*Ipump(eNai,eKo,erho) )
# eKo
# deKo/dt= 1/tau*(erK*nuE(Ve) +gamma1*beta*egkl*(Ve-eVk(eKo)) -2*beta*Ipump(eNai,eKo,erho) -Idiff(eKo, Eepsilon)-Iglia(eKo,eGglia))

#iNai
# diNai/dt= 1/tau*(irNa*nuI(Vi) -gamma1*ignal*(Vi-iVNa(iNai)) -3*Ipump(iNai,iKo,irho) )
# eKo
# diKo/dt= 1/tau*(irK*nuI(Vi) +gamma1*beta*igkl*(Vi-iVk(iKo)) -2*beta*Ipump(iNai,iKo,irho) -Idiff(iKo, Iepsilon)-Iglia(iKo,iGglia))


eNa0(eNai) = 144 - beta*(eNai-18)
eKi(eNai) = 158 - eNai

iNa0(iNai) = 144 - beta*(iNai-18)
iKi(iNai) = 158 - iNai



# dynamic ion concentration


# PUMPS GLIA DIFFUSION
Ipump(Nai,Ko,rho)=( rho/(1+exp((25-Nai)/3)) )*( 1/(1+exp(5.5-Ko)) )
Iglia(Ko,Gglia)=Gglia/(1 + exp((18-Ko)/2.5))
Idiff(Ko,epsilon)=epsilon*(Ko-Koinf)


# REVERSAL POTENTIALS
eVNa(eNai)=26.64*log(eNa0(eNai)/eNai)
eVk(eKo)=26.64*log(eKo/eKi(eNai))
eVcl=26.64*log(ecli/eclO)

iVNa(iNai)=26.64*log(iNa0(iNai)/iNai)
iVk(iKo)=26.64*log(iKo/iKi(iNai))
iVcl=26.64*log(icli/iclO)


# A(V) APPROXIMATION
#Excitatory/Inhibitory population sigmoid fit

number ea=2.844e+04
number eb=0.1916
number ec=1.236e+04

number ia=2.844e+04
number ib=0.1916
number ic=1.236e+04


 # Ve
 dVe/dt=(-egnal*(Ve-eVNa(eNai))-egkl*(Ve-eVk(eKo))-egcil*(Ve-eVcl)-gee*g_e*(Ve-V_AMPA)-gie*g_i*(Ve-V_GABA)+I+noise)/Ce

 # A(Ve)
 nuE(Ve)=(egnal+egkl+egcil)/Ce*(ea/(ec+exp(-eb*Ve)))

 # Vi
 dVi/dt=(-ignal*(Vi-iVNa(iNai))-igkl*(Vi-iVk(iKo))-igcil*(Vi-iVcl)-gei*g_e*(Vi-V_AMPA)-gii*g_i*(Vi-V_GABA))/Ci
 
 # A(Vi)
 nuI(Vi)=(ignal+igkl+igcil)/Ci*(ia/(ic+exp(-ib*Vi)))

# B(Ve)
# + 1/sqrt(2*pi)/sigVe*(-gL*(Ve-VLe)-gAHP*g_AHP*(Ve-VAHP)-gS*g_e*(Ve-VS)+I)/C*sign((-gL*(Ve-VLe)-gAHP*g_AHP*(Ve-VAHP)-gS*g_e*(Ve-VS)+I)/C)*exp(-(Ve-VTe)^2/2/sigVe^2)


# E gating variable
dg_e/dt=ee
dee/dt=1/tauE_1/tauE_2*(nuE(Ve)*(1-g_e)-g_e-(tauE_1+tauE_2)*ee)

# I gating variable
dg_i/dt=ii
dii/dt=1/tauI_1/tauI_2*(nuI(Vi)*(1-g_i)-g_i-(tauI_1+tauI_2)*ii)

# Ornstein-Uhlenbeck, noisy input
 wiener w
 dnoise/dt=-noise/tau_c+w*sigma*sqrt(0.05)

# noise parameters
 par tau_c=3, sigma=1
 init noise=0



# aux INP=I+n
aux NUE=nuE(Ve)*1000
aux NUI=nuI(VI)*1000


# INITIAL CONDITIONS

init Ve=-50
init Vi=-50

init g_e=0, ee=0
init g_i=0, ii=0

init noise=0

# init g_AHP=0, ahp=0

# init eNai = 15.5
# init eKo = 7.8

# init iNai = 15.5
# init iKo = 7.8

#init g_AHP=0, a=0

@ total=1000, dt=0.05, bounds=1000000000000000000, MAXSTOR=10000000
done
